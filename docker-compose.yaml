#version: "3.8"

services:
  postgres:
    image: debezium/postgres:13
    container_name: postgres
    networks:
      - mynet
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2Ga9xImQxr
    restart: always 

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper
    networks:
      - mynet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: kafka
    networks:
      - mynet
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      KAFKA_STATUS_STORAGE_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_PARTITION_COUNT: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
    restart: always

  debezium:
    image: debezium/connect:1.4
    container_name: debezium
    networks:
      - mynet
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    depends_on:
      - kafka
    ports:
      - 8084:8083
    volumes:
      - ./debezium.json:/etc/kafka/connect/debezium.json
      - ./idrepo.json:/etc/kafka/connect/idrepo.json
      - ./master.json:/etc/kafka/connect/master.json
      - ./audit.json:/etc/kafka/connect/audit.json
      - ./ida.json:/etc/kafka/connect/ida.json
      - ./regprc.json:/etc/kafka/connect/regprc.json
      
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elastic
    networks:
      - mynet
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    restart: always
    
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic
    networks:
      - mynet
    ports:
      - "5601:5601"
    
    

  kafka-connect:
    image: dharanidharan23a/custom-kafka-connect:latest
    container_name: kafka-connect-elasticsearch
    ports:
      - "8086:8086"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_PORT: 8086
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-elasticsearch
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components
    depends_on:
      - kafka
    networks:
      - mynet
    
networks:
  mynet:
    driver: bridge

volumes:
  es-data:
    external: true